
state 0
	$accept: .translation_unit $end 

	INT_LITERAL  shift 33
	DOUBLE_LITERAL  shift 34
	STRING_LITERAL  shift 35
	IDENTIFIER  shift 15
	FUNCTION  shift 5
	IF  shift 17
	WHILE  shift 18
	FOR  shift 19
	RETURN_T  shift 20
	BREAK  shift 21
	CONTINUE  shift 22
	NULL_T  shift 38
	LP  shift 32
	ADD  shift 31
	SUB  shift 30
	TRUE_T  shift 36
	FALSE_T  shift 37
	GLOBAL_T  shift 16
	.  error

	primary_expression  goto 29
	unary_expression  goto 28
	multiplicative_expression  goto 27
	additive_expression  goto 26
	relational_expression  goto 25
	expression  goto 6
	logical_or_expression  goto 14
	logical_and_expression  goto 23
	equality_expression  goto 24
	continue_statement  goto 13
	return_statement  goto 11
	break_statement  goto 12
	statement  goto 4
	for_statement  goto 10
	global_statement  goto 7
	if_statement  goto 8
	while_statement  goto 9
	translation_unit  goto 1
	definition_or_statement  goto 2
	function_definition  goto 3

state 1
	$accept:  translation_unit.$end 
	translation_unit:  translation_unit.definition_or_statement 

	$end  accept
	INT_LITERAL  shift 33
	DOUBLE_LITERAL  shift 34
	STRING_LITERAL  shift 35
	IDENTIFIER  shift 15
	FUNCTION  shift 5
	IF  shift 17
	WHILE  shift 18
	FOR  shift 19
	RETURN_T  shift 20
	BREAK  shift 21
	CONTINUE  shift 22
	NULL_T  shift 38
	LP  shift 32
	ADD  shift 31
	SUB  shift 30
	TRUE_T  shift 36
	FALSE_T  shift 37
	GLOBAL_T  shift 16
	.  error

	primary_expression  goto 29
	unary_expression  goto 28
	multiplicative_expression  goto 27
	additive_expression  goto 26
	relational_expression  goto 25
	expression  goto 6
	logical_or_expression  goto 14
	logical_and_expression  goto 23
	equality_expression  goto 24
	continue_statement  goto 13
	return_statement  goto 11
	break_statement  goto 12
	statement  goto 4
	for_statement  goto 10
	global_statement  goto 7
	if_statement  goto 8
	while_statement  goto 9
	definition_or_statement  goto 39
	function_definition  goto 3

state 2
	translation_unit:  definition_or_statement.    (1)

	.  reduce 1 (src line 39)


state 3
	definition_or_statement:  function_definition.    (3)

	.  reduce 3 (src line 43)


state 4
	definition_or_statement:  statement.    (4)

	.  reduce 4 (src line 45)


state 5
	function_definition:  FUNCTION.IDENTIFIER LP parameter_list RP block 
	function_definition:  FUNCTION.IDENTIFIER LP RP block 

	IDENTIFIER  shift 40
	.  error


state 6
	statement:  expression.SEMICOLON 

	SEMICOLON  shift 41
	.  error


state 7
	statement:  global_statement.    (48)

	.  reduce 48 (src line 219)


state 8
	statement:  if_statement.    (49)

	.  reduce 49 (src line 220)


state 9
	statement:  while_statement.    (50)

	.  reduce 50 (src line 221)


state 10
	statement:  for_statement.    (51)

	.  reduce 51 (src line 222)


state 11
	statement:  return_statement.    (52)

	.  reduce 52 (src line 223)


state 12
	statement:  break_statement.    (53)

	.  reduce 53 (src line 224)


state 13
	statement:  continue_statement.    (54)

	.  reduce 54 (src line 225)


state 14
	expression:  logical_or_expression.    (13)
	logical_or_expression:  logical_or_expression.LOGICAL_OR logical_and_expression 

	LOGICAL_OR  shift 42
	.  reduce 13 (src line 91)


state 15
	expression:  IDENTIFIER.ASSIGN expression 
	primary_expression:  IDENTIFIER.LP argument_list RP 
	primary_expression:  IDENTIFIER.LP RP 
	primary_expression:  IDENTIFIER.    (40)

	LP  shift 44
	ASSIGN  shift 43
	.  reduce 40 (src line 193)


state 16
	global_statement:  GLOBAL_T.identifier_list SEMICOLON 

	IDENTIFIER  shift 46
	.  error

	identifier_list  goto 45

state 17
	if_statement:  IF.LP expression RP block 
	if_statement:  IF.LP expression RP block ELSE block 
	if_statement:  IF.LP expression RP block elsif_list 
	if_statement:  IF.LP expression RP block elsif_list ELSE block 

	LP  shift 47
	.  error


state 18
	while_statement:  WHILE.LP expression RP block 

	LP  shift 48
	.  error


state 19
	for_statement:  FOR.LP expression_opt SEMICOLON expression_opt SEMICOLON expression_opt RP block 

	LP  shift 49
	.  error


state 20
	return_statement:  RETURN_T.expression_opt SEMICOLON 
	expression_opt: .    (67)

	INT_LITERAL  shift 33
	DOUBLE_LITERAL  shift 34
	STRING_LITERAL  shift 35
	IDENTIFIER  shift 15
	NULL_T  shift 38
	LP  shift 32
	ADD  shift 31
	SUB  shift 30
	TRUE_T  shift 36
	FALSE_T  shift 37
	.  reduce 67 (src line 286)

	primary_expression  goto 29
	unary_expression  goto 28
	multiplicative_expression  goto 27
	additive_expression  goto 26
	relational_expression  goto 25
	expression  goto 51
	expression_opt  goto 50
	logical_or_expression  goto 14
	logical_and_expression  goto 23
	equality_expression  goto 24

state 21
	break_statement:  BREAK.SEMICOLON 

	SEMICOLON  shift 52
	.  error


state 22
	continue_statement:  CONTINUE.SEMICOLON 

	SEMICOLON  shift 53
	.  error


state 23
	logical_or_expression:  logical_and_expression.    (15)
	logical_and_expression:  logical_and_expression.LOGICAL_AND equality_expression 

	LOGICAL_AND  shift 54
	.  reduce 15 (src line 97)


state 24
	logical_and_expression:  equality_expression.    (17)
	equality_expression:  equality_expression.EQ relational_expression 
	equality_expression:  equality_expression.NE relational_expression 

	EQ  shift 55
	NE  shift 56
	.  reduce 17 (src line 104)


state 25
	equality_expression:  relational_expression.    (19)
	relational_expression:  relational_expression.GT additive_expression 
	relational_expression:  relational_expression.GE additive_expression 
	relational_expression:  relational_expression.LT additive_expression 
	relational_expression:  relational_expression.LE additive_expression 

	GT  shift 57
	GE  shift 58
	LT  shift 59
	LE  shift 60
	.  reduce 19 (src line 111)


state 26
	relational_expression:  additive_expression.    (22)
	additive_expression:  additive_expression.ADD multiplicative_expression 
	additive_expression:  additive_expression.SUB multiplicative_expression 

	ADD  shift 61
	SUB  shift 62
	.  reduce 22 (src line 122)


state 27
	additive_expression:  multiplicative_expression.    (27)
	multiplicative_expression:  multiplicative_expression.MUL unary_expression 
	multiplicative_expression:  multiplicative_expression.DIV unary_expression 
	multiplicative_expression:  multiplicative_expression.MOD unary_expression 

	MUL  shift 63
	DIV  shift 64
	MOD  shift 65
	.  reduce 27 (src line 142)


state 28
	multiplicative_expression:  unary_expression.    (30)

	.  reduce 30 (src line 153)


state 29
	unary_expression:  primary_expression.    (34)

	.  reduce 34 (src line 169)


state 30
	unary_expression:  SUB.unary_expression 

	INT_LITERAL  shift 33
	DOUBLE_LITERAL  shift 34
	STRING_LITERAL  shift 35
	IDENTIFIER  shift 67
	NULL_T  shift 38
	LP  shift 32
	ADD  shift 31
	SUB  shift 30
	TRUE_T  shift 36
	FALSE_T  shift 37
	.  error

	primary_expression  goto 29
	unary_expression  goto 66

state 31
	unary_expression:  ADD.unary_expression 

	INT_LITERAL  shift 33
	DOUBLE_LITERAL  shift 34
	STRING_LITERAL  shift 35
	IDENTIFIER  shift 67
	NULL_T  shift 38
	LP  shift 32
	ADD  shift 31
	SUB  shift 30
	TRUE_T  shift 36
	FALSE_T  shift 37
	.  error

	primary_expression  goto 29
	unary_expression  goto 68

state 32
	primary_expression:  LP.expression RP 

	INT_LITERAL  shift 33
	DOUBLE_LITERAL  shift 34
	STRING_LITERAL  shift 35
	IDENTIFIER  shift 15
	NULL_T  shift 38
	LP  shift 32
	ADD  shift 31
	SUB  shift 30
	TRUE_T  shift 36
	FALSE_T  shift 37
	.  error

	primary_expression  goto 29
	unary_expression  goto 28
	multiplicative_expression  goto 27
	additive_expression  goto 26
	relational_expression  goto 25
	expression  goto 69
	logical_or_expression  goto 14
	logical_and_expression  goto 23
	equality_expression  goto 24

state 33
	primary_expression:  INT_LITERAL.    (41)

	.  reduce 41 (src line 197)


state 34
	primary_expression:  DOUBLE_LITERAL.    (42)

	.  reduce 42 (src line 198)


state 35
	primary_expression:  STRING_LITERAL.    (43)

	.  reduce 43 (src line 199)


state 36
	primary_expression:  TRUE_T.    (44)

	.  reduce 44 (src line 200)


state 37
	primary_expression:  FALSE_T.    (45)

	.  reduce 45 (src line 204)


state 38
	primary_expression:  NULL_T.    (46)

	.  reduce 46 (src line 208)


state 39
	translation_unit:  translation_unit definition_or_statement.    (2)

	.  reduce 2 (src line 41)


state 40
	function_definition:  FUNCTION IDENTIFIER.LP parameter_list RP block 
	function_definition:  FUNCTION IDENTIFIER.LP RP block 

	LP  shift 70
	.  error


state 41
	statement:  expression SEMICOLON.    (47)

	.  reduce 47 (src line 214)


state 42
	logical_or_expression:  logical_or_expression LOGICAL_OR.logical_and_expression 

	INT_LITERAL  shift 33
	DOUBLE_LITERAL  shift 34
	STRING_LITERAL  shift 35
	IDENTIFIER  shift 67
	NULL_T  shift 38
	LP  shift 32
	ADD  shift 31
	SUB  shift 30
	TRUE_T  shift 36
	FALSE_T  shift 37
	.  error

	primary_expression  goto 29
	unary_expression  goto 28
	multiplicative_expression  goto 27
	additive_expression  goto 26
	relational_expression  goto 25
	logical_and_expression  goto 71
	equality_expression  goto 24

state 43
	expression:  IDENTIFIER ASSIGN.expression 

	INT_LITERAL  shift 33
	DOUBLE_LITERAL  shift 34
	STRING_LITERAL  shift 35
	IDENTIFIER  shift 15
	NULL_T  shift 38
	LP  shift 32
	ADD  shift 31
	SUB  shift 30
	TRUE_T  shift 36
	FALSE_T  shift 37
	.  error

	primary_expression  goto 29
	unary_expression  goto 28
	multiplicative_expression  goto 27
	additive_expression  goto 26
	relational_expression  goto 25
	expression  goto 72
	logical_or_expression  goto 14
	logical_and_expression  goto 23
	equality_expression  goto 24

state 44
	primary_expression:  IDENTIFIER LP.argument_list RP 
	primary_expression:  IDENTIFIER LP.RP 

	INT_LITERAL  shift 33
	DOUBLE_LITERAL  shift 34
	STRING_LITERAL  shift 35
	IDENTIFIER  shift 15
	NULL_T  shift 38
	LP  shift 32
	RP  shift 74
	ADD  shift 31
	SUB  shift 30
	TRUE_T  shift 36
	FALSE_T  shift 37
	.  error

	primary_expression  goto 29
	unary_expression  goto 28
	multiplicative_expression  goto 27
	additive_expression  goto 26
	relational_expression  goto 25
	expression  goto 75
	logical_or_expression  goto 14
	logical_and_expression  goto 23
	equality_expression  goto 24
	argument_list  goto 73

state 45
	global_statement:  GLOBAL_T identifier_list.SEMICOLON 
	identifier_list:  identifier_list.COMMA IDENTIFIER 

	SEMICOLON  shift 76
	COMMA  shift 77
	.  error


state 46
	identifier_list:  IDENTIFIER.    (56)

	.  reduce 56 (src line 232)


state 47
	if_statement:  IF LP.expression RP block 
	if_statement:  IF LP.expression RP block ELSE block 
	if_statement:  IF LP.expression RP block elsif_list 
	if_statement:  IF LP.expression RP block elsif_list ELSE block 

	INT_LITERAL  shift 33
	DOUBLE_LITERAL  shift 34
	STRING_LITERAL  shift 35
	IDENTIFIER  shift 15
	NULL_T  shift 38
	LP  shift 32
	ADD  shift 31
	SUB  shift 30
	TRUE_T  shift 36
	FALSE_T  shift 37
	.  error

	primary_expression  goto 29
	unary_expression  goto 28
	multiplicative_expression  goto 27
	additive_expression  goto 26
	relational_expression  goto 25
	expression  goto 78
	logical_or_expression  goto 14
	logical_and_expression  goto 23
	equality_expression  goto 24

state 48
	while_statement:  WHILE LP.expression RP block 

	INT_LITERAL  shift 33
	DOUBLE_LITERAL  shift 34
	STRING_LITERAL  shift 35
	IDENTIFIER  shift 15
	NULL_T  shift 38
	LP  shift 32
	ADD  shift 31
	SUB  shift 30
	TRUE_T  shift 36
	FALSE_T  shift 37
	.  error

	primary_expression  goto 29
	unary_expression  goto 28
	multiplicative_expression  goto 27
	additive_expression  goto 26
	relational_expression  goto 25
	expression  goto 79
	logical_or_expression  goto 14
	logical_and_expression  goto 23
	equality_expression  goto 24

state 49
	for_statement:  FOR LP.expression_opt SEMICOLON expression_opt SEMICOLON expression_opt RP block 
	expression_opt: .    (67)

	INT_LITERAL  shift 33
	DOUBLE_LITERAL  shift 34
	STRING_LITERAL  shift 35
	IDENTIFIER  shift 15
	NULL_T  shift 38
	LP  shift 32
	ADD  shift 31
	SUB  shift 30
	TRUE_T  shift 36
	FALSE_T  shift 37
	.  reduce 67 (src line 286)

	primary_expression  goto 29
	unary_expression  goto 28
	multiplicative_expression  goto 27
	additive_expression  goto 26
	relational_expression  goto 25
	expression  goto 51
	expression_opt  goto 80
	logical_or_expression  goto 14
	logical_and_expression  goto 23
	equality_expression  goto 24

state 50
	return_statement:  RETURN_T expression_opt.SEMICOLON 

	SEMICOLON  shift 81
	.  error


state 51
	expression_opt:  expression.    (68)

	.  reduce 68 (src line 291)


state 52
	break_statement:  BREAK SEMICOLON.    (70)

	.  reduce 70 (src line 299)


state 53
	continue_statement:  CONTINUE SEMICOLON.    (71)

	.  reduce 71 (src line 304)


state 54
	logical_and_expression:  logical_and_expression LOGICAL_AND.equality_expression 

	INT_LITERAL  shift 33
	DOUBLE_LITERAL  shift 34
	STRING_LITERAL  shift 35
	IDENTIFIER  shift 67
	NULL_T  shift 38
	LP  shift 32
	ADD  shift 31
	SUB  shift 30
	TRUE_T  shift 36
	FALSE_T  shift 37
	.  error

	primary_expression  goto 29
	unary_expression  goto 28
	multiplicative_expression  goto 27
	additive_expression  goto 26
	relational_expression  goto 25
	equality_expression  goto 82

state 55
	equality_expression:  equality_expression EQ.relational_expression 

	INT_LITERAL  shift 33
	DOUBLE_LITERAL  shift 34
	STRING_LITERAL  shift 35
	IDENTIFIER  shift 67
	NULL_T  shift 38
	LP  shift 32
	ADD  shift 31
	SUB  shift 30
	TRUE_T  shift 36
	FALSE_T  shift 37
	.  error

	primary_expression  goto 29
	unary_expression  goto 28
	multiplicative_expression  goto 27
	additive_expression  goto 26
	relational_expression  goto 83

state 56
	equality_expression:  equality_expression NE.relational_expression 

	INT_LITERAL  shift 33
	DOUBLE_LITERAL  shift 34
	STRING_LITERAL  shift 35
	IDENTIFIER  shift 67
	NULL_T  shift 38
	LP  shift 32
	ADD  shift 31
	SUB  shift 30
	TRUE_T  shift 36
	FALSE_T  shift 37
	.  error

	primary_expression  goto 29
	unary_expression  goto 28
	multiplicative_expression  goto 27
	additive_expression  goto 26
	relational_expression  goto 84

state 57
	relational_expression:  relational_expression GT.additive_expression 

	INT_LITERAL  shift 33
	DOUBLE_LITERAL  shift 34
	STRING_LITERAL  shift 35
	IDENTIFIER  shift 67
	NULL_T  shift 38
	LP  shift 32
	ADD  shift 31
	SUB  shift 30
	TRUE_T  shift 36
	FALSE_T  shift 37
	.  error

	primary_expression  goto 29
	unary_expression  goto 28
	multiplicative_expression  goto 27
	additive_expression  goto 85

state 58
	relational_expression:  relational_expression GE.additive_expression 

	INT_LITERAL  shift 33
	DOUBLE_LITERAL  shift 34
	STRING_LITERAL  shift 35
	IDENTIFIER  shift 67
	NULL_T  shift 38
	LP  shift 32
	ADD  shift 31
	SUB  shift 30
	TRUE_T  shift 36
	FALSE_T  shift 37
	.  error

	primary_expression  goto 29
	unary_expression  goto 28
	multiplicative_expression  goto 27
	additive_expression  goto 86

state 59
	relational_expression:  relational_expression LT.additive_expression 

	INT_LITERAL  shift 33
	DOUBLE_LITERAL  shift 34
	STRING_LITERAL  shift 35
	IDENTIFIER  shift 67
	NULL_T  shift 38
	LP  shift 32
	ADD  shift 31
	SUB  shift 30
	TRUE_T  shift 36
	FALSE_T  shift 37
	.  error

	primary_expression  goto 29
	unary_expression  goto 28
	multiplicative_expression  goto 27
	additive_expression  goto 87

state 60
	relational_expression:  relational_expression LE.additive_expression 

	INT_LITERAL  shift 33
	DOUBLE_LITERAL  shift 34
	STRING_LITERAL  shift 35
	IDENTIFIER  shift 67
	NULL_T  shift 38
	LP  shift 32
	ADD  shift 31
	SUB  shift 30
	TRUE_T  shift 36
	FALSE_T  shift 37
	.  error

	primary_expression  goto 29
	unary_expression  goto 28
	multiplicative_expression  goto 27
	additive_expression  goto 88

state 61
	additive_expression:  additive_expression ADD.multiplicative_expression 

	INT_LITERAL  shift 33
	DOUBLE_LITERAL  shift 34
	STRING_LITERAL  shift 35
	IDENTIFIER  shift 67
	NULL_T  shift 38
	LP  shift 32
	ADD  shift 31
	SUB  shift 30
	TRUE_T  shift 36
	FALSE_T  shift 37
	.  error

	primary_expression  goto 29
	unary_expression  goto 28
	multiplicative_expression  goto 89

state 62
	additive_expression:  additive_expression SUB.multiplicative_expression 

	INT_LITERAL  shift 33
	DOUBLE_LITERAL  shift 34
	STRING_LITERAL  shift 35
	IDENTIFIER  shift 67
	NULL_T  shift 38
	LP  shift 32
	ADD  shift 31
	SUB  shift 30
	TRUE_T  shift 36
	FALSE_T  shift 37
	.  error

	primary_expression  goto 29
	unary_expression  goto 28
	multiplicative_expression  goto 90

state 63
	multiplicative_expression:  multiplicative_expression MUL.unary_expression 

	INT_LITERAL  shift 33
	DOUBLE_LITERAL  shift 34
	STRING_LITERAL  shift 35
	IDENTIFIER  shift 67
	NULL_T  shift 38
	LP  shift 32
	ADD  shift 31
	SUB  shift 30
	TRUE_T  shift 36
	FALSE_T  shift 37
	.  error

	primary_expression  goto 29
	unary_expression  goto 91

state 64
	multiplicative_expression:  multiplicative_expression DIV.unary_expression 

	INT_LITERAL  shift 33
	DOUBLE_LITERAL  shift 34
	STRING_LITERAL  shift 35
	IDENTIFIER  shift 67
	NULL_T  shift 38
	LP  shift 32
	ADD  shift 31
	SUB  shift 30
	TRUE_T  shift 36
	FALSE_T  shift 37
	.  error

	primary_expression  goto 29
	unary_expression  goto 92

state 65
	multiplicative_expression:  multiplicative_expression MOD.unary_expression 

	INT_LITERAL  shift 33
	DOUBLE_LITERAL  shift 34
	STRING_LITERAL  shift 35
	IDENTIFIER  shift 67
	NULL_T  shift 38
	LP  shift 32
	ADD  shift 31
	SUB  shift 30
	TRUE_T  shift 36
	FALSE_T  shift 37
	.  error

	primary_expression  goto 29
	unary_expression  goto 93

state 66
	unary_expression:  SUB unary_expression.    (35)

	.  reduce 35 (src line 171)


state 67
	primary_expression:  IDENTIFIER.LP argument_list RP 
	primary_expression:  IDENTIFIER.LP RP 
	primary_expression:  IDENTIFIER.    (40)

	LP  shift 44
	.  reduce 40 (src line 193)


state 68
	unary_expression:  ADD unary_expression.    (36)

	.  reduce 36 (src line 175)


state 69
	primary_expression:  LP expression.RP 

	RP  shift 94
	.  error


state 70
	function_definition:  FUNCTION IDENTIFIER LP.parameter_list RP block 
	function_definition:  FUNCTION IDENTIFIER LP.RP block 

	IDENTIFIER  shift 97
	RP  shift 96
	.  error

	parameter_list  goto 95

state 71
	logical_or_expression:  logical_or_expression LOGICAL_OR logical_and_expression.    (16)
	logical_and_expression:  logical_and_expression.LOGICAL_AND equality_expression 

	LOGICAL_AND  shift 54
	.  reduce 16 (src line 99)


state 72
	expression:  IDENTIFIER ASSIGN expression.    (14)

	.  reduce 14 (src line 93)


state 73
	argument_list:  argument_list.COMMA expression 
	primary_expression:  IDENTIFIER LP argument_list.RP 

	RP  shift 99
	COMMA  shift 98
	.  error


state 74
	primary_expression:  IDENTIFIER LP RP.    (38)

	.  reduce 38 (src line 185)


state 75
	argument_list:  expression.    (9)

	.  reduce 9 (src line 71)


state 76
	global_statement:  GLOBAL_T identifier_list SEMICOLON.    (55)

	.  reduce 55 (src line 227)


state 77
	identifier_list:  identifier_list COMMA.IDENTIFIER 

	IDENTIFIER  shift 100
	.  error


state 78
	if_statement:  IF LP expression.RP block 
	if_statement:  IF LP expression.RP block ELSE block 
	if_statement:  IF LP expression.RP block elsif_list 
	if_statement:  IF LP expression.RP block elsif_list ELSE block 

	RP  shift 101
	.  error


state 79
	while_statement:  WHILE LP expression.RP block 

	RP  shift 102
	.  error


state 80
	for_statement:  FOR LP expression_opt.SEMICOLON expression_opt SEMICOLON expression_opt RP block 

	SEMICOLON  shift 103
	.  error


state 81
	return_statement:  RETURN_T expression_opt SEMICOLON.    (69)

	.  reduce 69 (src line 293)


state 82
	logical_and_expression:  logical_and_expression LOGICAL_AND equality_expression.    (18)
	equality_expression:  equality_expression.EQ relational_expression 
	equality_expression:  equality_expression.NE relational_expression 

	EQ  shift 55
	NE  shift 56
	.  reduce 18 (src line 106)


state 83
	equality_expression:  equality_expression EQ relational_expression.    (20)
	relational_expression:  relational_expression.GT additive_expression 
	relational_expression:  relational_expression.GE additive_expression 
	relational_expression:  relational_expression.LT additive_expression 
	relational_expression:  relational_expression.LE additive_expression 

	GT  shift 57
	GE  shift 58
	LT  shift 59
	LE  shift 60
	.  reduce 20 (src line 113)


state 84
	equality_expression:  equality_expression NE relational_expression.    (21)
	relational_expression:  relational_expression.GT additive_expression 
	relational_expression:  relational_expression.GE additive_expression 
	relational_expression:  relational_expression.LT additive_expression 
	relational_expression:  relational_expression.LE additive_expression 

	GT  shift 57
	GE  shift 58
	LT  shift 59
	LE  shift 60
	.  reduce 21 (src line 117)


state 85
	relational_expression:  relational_expression GT additive_expression.    (23)
	additive_expression:  additive_expression.ADD multiplicative_expression 
	additive_expression:  additive_expression.SUB multiplicative_expression 

	ADD  shift 61
	SUB  shift 62
	.  reduce 23 (src line 124)


state 86
	relational_expression:  relational_expression GE additive_expression.    (24)
	additive_expression:  additive_expression.ADD multiplicative_expression 
	additive_expression:  additive_expression.SUB multiplicative_expression 

	ADD  shift 61
	SUB  shift 62
	.  reduce 24 (src line 128)


state 87
	relational_expression:  relational_expression LT additive_expression.    (25)
	additive_expression:  additive_expression.ADD multiplicative_expression 
	additive_expression:  additive_expression.SUB multiplicative_expression 

	ADD  shift 61
	SUB  shift 62
	.  reduce 25 (src line 132)


state 88
	relational_expression:  relational_expression LE additive_expression.    (26)
	additive_expression:  additive_expression.ADD multiplicative_expression 
	additive_expression:  additive_expression.SUB multiplicative_expression 

	ADD  shift 61
	SUB  shift 62
	.  reduce 26 (src line 137)


state 89
	additive_expression:  additive_expression ADD multiplicative_expression.    (28)
	multiplicative_expression:  multiplicative_expression.MUL unary_expression 
	multiplicative_expression:  multiplicative_expression.DIV unary_expression 
	multiplicative_expression:  multiplicative_expression.MOD unary_expression 

	MUL  shift 63
	DIV  shift 64
	MOD  shift 65
	.  reduce 28 (src line 144)


state 90
	additive_expression:  additive_expression SUB multiplicative_expression.    (29)
	multiplicative_expression:  multiplicative_expression.MUL unary_expression 
	multiplicative_expression:  multiplicative_expression.DIV unary_expression 
	multiplicative_expression:  multiplicative_expression.MOD unary_expression 

	MUL  shift 63
	DIV  shift 64
	MOD  shift 65
	.  reduce 29 (src line 148)


state 91
	multiplicative_expression:  multiplicative_expression MUL unary_expression.    (31)

	.  reduce 31 (src line 155)


state 92
	multiplicative_expression:  multiplicative_expression DIV unary_expression.    (32)

	.  reduce 32 (src line 159)


state 93
	multiplicative_expression:  multiplicative_expression MOD unary_expression.    (33)

	.  reduce 33 (src line 163)


state 94
	primary_expression:  LP expression RP.    (39)

	.  reduce 39 (src line 189)


state 95
	function_definition:  FUNCTION IDENTIFIER LP parameter_list.RP block 
	parameter_list:  parameter_list.COMMA IDENTIFIER 

	RP  shift 104
	COMMA  shift 105
	.  error


state 96
	function_definition:  FUNCTION IDENTIFIER LP RP.block 

	LC  shift 107
	.  error

	block  goto 106

state 97
	parameter_list:  IDENTIFIER.    (7)

	.  reduce 7 (src line 61)


state 98
	argument_list:  argument_list COMMA.expression 

	INT_LITERAL  shift 33
	DOUBLE_LITERAL  shift 34
	STRING_LITERAL  shift 35
	IDENTIFIER  shift 15
	NULL_T  shift 38
	LP  shift 32
	ADD  shift 31
	SUB  shift 30
	TRUE_T  shift 36
	FALSE_T  shift 37
	.  error

	primary_expression  goto 29
	unary_expression  goto 28
	multiplicative_expression  goto 27
	additive_expression  goto 26
	relational_expression  goto 25
	expression  goto 108
	logical_or_expression  goto 14
	logical_and_expression  goto 23
	equality_expression  goto 24

state 99
	primary_expression:  IDENTIFIER LP argument_list RP.    (37)

	.  reduce 37 (src line 180)


state 100
	identifier_list:  identifier_list COMMA IDENTIFIER.    (57)

	.  reduce 57 (src line 237)


state 101
	if_statement:  IF LP expression RP.block 
	if_statement:  IF LP expression RP.block ELSE block 
	if_statement:  IF LP expression RP.block elsif_list 
	if_statement:  IF LP expression RP.block elsif_list ELSE block 

	LC  shift 107
	.  error

	block  goto 109

state 102
	while_statement:  WHILE LP expression RP.block 

	LC  shift 107
	.  error

	block  goto 110

state 103
	for_statement:  FOR LP expression_opt SEMICOLON.expression_opt SEMICOLON expression_opt RP block 
	expression_opt: .    (67)

	INT_LITERAL  shift 33
	DOUBLE_LITERAL  shift 34
	STRING_LITERAL  shift 35
	IDENTIFIER  shift 15
	NULL_T  shift 38
	LP  shift 32
	ADD  shift 31
	SUB  shift 30
	TRUE_T  shift 36
	FALSE_T  shift 37
	.  reduce 67 (src line 286)

	primary_expression  goto 29
	unary_expression  goto 28
	multiplicative_expression  goto 27
	additive_expression  goto 26
	relational_expression  goto 25
	expression  goto 51
	expression_opt  goto 111
	logical_or_expression  goto 14
	logical_and_expression  goto 23
	equality_expression  goto 24

state 104
	function_definition:  FUNCTION IDENTIFIER LP parameter_list RP.block 

	LC  shift 107
	.  error

	block  goto 112

state 105
	parameter_list:  parameter_list COMMA.IDENTIFIER 

	IDENTIFIER  shift 113
	.  error


state 106
	function_definition:  FUNCTION IDENTIFIER LP RP block.    (6)

	.  reduce 6 (src line 56)


state 107
	block:  LC.statement_list RC 
	block:  LC.RC 

	INT_LITERAL  shift 33
	DOUBLE_LITERAL  shift 34
	STRING_LITERAL  shift 35
	IDENTIFIER  shift 15
	IF  shift 17
	WHILE  shift 18
	FOR  shift 19
	RETURN_T  shift 20
	BREAK  shift 21
	CONTINUE  shift 22
	NULL_T  shift 38
	LP  shift 32
	RC  shift 115
	ADD  shift 31
	SUB  shift 30
	TRUE_T  shift 36
	FALSE_T  shift 37
	GLOBAL_T  shift 16
	.  error

	primary_expression  goto 29
	unary_expression  goto 28
	multiplicative_expression  goto 27
	additive_expression  goto 26
	relational_expression  goto 25
	expression  goto 6
	logical_or_expression  goto 14
	logical_and_expression  goto 23
	equality_expression  goto 24
	continue_statement  goto 13
	return_statement  goto 11
	break_statement  goto 12
	statement  goto 116
	for_statement  goto 10
	global_statement  goto 7
	if_statement  goto 8
	while_statement  goto 9
	statement_list  goto 114

state 108
	argument_list:  argument_list COMMA expression.    (10)

	.  reduce 10 (src line 76)


state 109
	if_statement:  IF LP expression RP block.    (58)
	if_statement:  IF LP expression RP block.ELSE block 
	if_statement:  IF LP expression RP block.elsif_list 
	if_statement:  IF LP expression RP block.elsif_list ELSE block 

	ELSE  shift 117
	ELSIF  shift 120
	.  reduce 58 (src line 242)

	elsif  goto 119
	elsif_list  goto 118

state 110
	while_statement:  WHILE LP expression RP block.    (65)

	.  reduce 65 (src line 273)


state 111
	for_statement:  FOR LP expression_opt SEMICOLON expression_opt.SEMICOLON expression_opt RP block 

	SEMICOLON  shift 121
	.  error


state 112
	function_definition:  FUNCTION IDENTIFIER LP parameter_list RP block.    (5)

	.  reduce 5 (src line 51)


state 113
	parameter_list:  parameter_list COMMA IDENTIFIER.    (8)

	.  reduce 8 (src line 66)


state 114
	statement_list:  statement_list.statement 
	block:  LC statement_list.RC 

	INT_LITERAL  shift 33
	DOUBLE_LITERAL  shift 34
	STRING_LITERAL  shift 35
	IDENTIFIER  shift 15
	IF  shift 17
	WHILE  shift 18
	FOR  shift 19
	RETURN_T  shift 20
	BREAK  shift 21
	CONTINUE  shift 22
	NULL_T  shift 38
	LP  shift 32
	RC  shift 123
	ADD  shift 31
	SUB  shift 30
	TRUE_T  shift 36
	FALSE_T  shift 37
	GLOBAL_T  shift 16
	.  error

	primary_expression  goto 29
	unary_expression  goto 28
	multiplicative_expression  goto 27
	additive_expression  goto 26
	relational_expression  goto 25
	expression  goto 6
	logical_or_expression  goto 14
	logical_and_expression  goto 23
	equality_expression  goto 24
	continue_statement  goto 13
	return_statement  goto 11
	break_statement  goto 12
	statement  goto 122
	for_statement  goto 10
	global_statement  goto 7
	if_statement  goto 8
	while_statement  goto 9

state 115
	block:  LC RC.    (73)

	.  reduce 73 (src line 315)


state 116
	statement_list:  statement.    (11)

	.  reduce 11 (src line 81)


state 117
	if_statement:  IF LP expression RP block ELSE.block 

	LC  shift 107
	.  error

	block  goto 124

state 118
	if_statement:  IF LP expression RP block elsif_list.    (60)
	if_statement:  IF LP expression RP block elsif_list.ELSE block 
	elsif_list:  elsif_list.elsif 

	ELSE  shift 125
	ELSIF  shift 120
	.  reduce 60 (src line 251)

	elsif  goto 126

state 119
	elsif_list:  elsif.    (62)

	.  reduce 62 (src line 260)


state 120
	elsif:  ELSIF.LP expression RP block 

	LP  shift 127
	.  error


state 121
	for_statement:  FOR LP expression_opt SEMICOLON expression_opt SEMICOLON.expression_opt RP block 
	expression_opt: .    (67)

	INT_LITERAL  shift 33
	DOUBLE_LITERAL  shift 34
	STRING_LITERAL  shift 35
	IDENTIFIER  shift 15
	NULL_T  shift 38
	LP  shift 32
	ADD  shift 31
	SUB  shift 30
	TRUE_T  shift 36
	FALSE_T  shift 37
	.  reduce 67 (src line 286)

	primary_expression  goto 29
	unary_expression  goto 28
	multiplicative_expression  goto 27
	additive_expression  goto 26
	relational_expression  goto 25
	expression  goto 51
	expression_opt  goto 128
	logical_or_expression  goto 14
	logical_and_expression  goto 23
	equality_expression  goto 24

state 122
	statement_list:  statement_list statement.    (12)

	.  reduce 12 (src line 86)


state 123
	block:  LC statement_list RC.    (72)

	.  reduce 72 (src line 310)


state 124
	if_statement:  IF LP expression RP block ELSE block.    (59)

	.  reduce 59 (src line 247)


state 125
	if_statement:  IF LP expression RP block elsif_list ELSE.block 

	LC  shift 107
	.  error

	block  goto 129

state 126
	elsif_list:  elsif_list elsif.    (63)

	.  reduce 63 (src line 262)


state 127
	elsif:  ELSIF LP.expression RP block 

	INT_LITERAL  shift 33
	DOUBLE_LITERAL  shift 34
	STRING_LITERAL  shift 35
	IDENTIFIER  shift 15
	NULL_T  shift 38
	LP  shift 32
	ADD  shift 31
	SUB  shift 30
	TRUE_T  shift 36
	FALSE_T  shift 37
	.  error

	primary_expression  goto 29
	unary_expression  goto 28
	multiplicative_expression  goto 27
	additive_expression  goto 26
	relational_expression  goto 25
	expression  goto 130
	logical_or_expression  goto 14
	logical_and_expression  goto 23
	equality_expression  goto 24

state 128
	for_statement:  FOR LP expression_opt SEMICOLON expression_opt SEMICOLON expression_opt.RP block 

	RP  shift 131
	.  error


state 129
	if_statement:  IF LP expression RP block elsif_list ELSE block.    (61)

	.  reduce 61 (src line 255)


state 130
	elsif:  ELSIF LP expression.RP block 

	RP  shift 132
	.  error


state 131
	for_statement:  FOR LP expression_opt SEMICOLON expression_opt SEMICOLON expression_opt RP.block 

	LC  shift 107
	.  error

	block  goto 133

state 132
	elsif:  ELSIF LP expression RP.block 

	LC  shift 107
	.  error

	block  goto 134

state 133
	for_statement:  FOR LP expression_opt SEMICOLON expression_opt SEMICOLON expression_opt RP block.    (66)

	.  reduce 66 (src line 279)


state 134
	elsif:  ELSIF LP expression RP block.    (64)

	.  reduce 64 (src line 267)


40 terminals, 29 nonterminals
74 grammar rules, 135/2000 states
0 shift/reduce, 0 reduce/reduce conflicts reported
78 working sets used
memory: parser 247/30000
110 extra closures
414 shift entries, 1 exceptions
68 goto entries
178 entries saved by goto default
Optimizer space used: output 232/30000
232 table entries, 30 zero
maximum spread: 40, maximum offset: 132
